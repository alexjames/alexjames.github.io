---
layout: default
title:  "The Evolution of Hyper-text"
date:   2019-06-20 12:50:00
categories: cs
---

## The Beginnings of the Web
Back in the day, CERN was having problems with high churn of information and no easy way to access it. Tim Berners Lee, who worked there, thought that Linked Information Systems were a better way to store information than hierarchical systems. The same way you would draw diagrams with cirles representing concepts and arrows representing the relationships between the concepts, Linked Information Systems encapsulate data and their relationships. His mental model for the collaborative work happening at CERN was that of people being represented as little spheres and those working together having strings attached among their spheres. Smaller projects would have fewer linked spheres, while bigger ones would have a more complex interconnected mesh. The whole organization would appear as a big inter-connected "web". He extended this model to the system he was building.

"Hypertext" is a term that existed since the 60's. Hypertext, which is taken to mean as an "extension" to regular text, is a model allowing for linking text content. Tim Berners Lee made hypertext the basis for his system and called it the World Wide Web. One of the major goals he had for the system he was building for information retreival was that it should allow any kind of information to be stored. And it should be possible to discover new information. The system would be de-centralized and allow access to heterogenous systems. Clients would access documents stored on a hypertext server using a browser application. A transformation could be applied on existing documents/databases to convert them to hypertext to serve clients. This way, older data not in hypertext could also be accessed by this system. The Hypertext Transfer Protocol would be the protocol used to access the system. The original implemntation only had the GET method. Interestingly, "authorization" and "accounting" were an explicit non-goal of the system. The focus of the system was on unrestricted information sharing.

## HTTP
HTTP follows the client-server model. A client makes a request to a server and a server responds to it. The client is always the initiator of a connection. 

### Message Formats
This is the format of an HTTP message:

```
HTTP-Message = Request | Response

generic message = start-line
                  *(0 or more headers CRLF)
                  CRLF
                  [message body]

Message body is optional.
```

* Client Request 
```
GET / HTTP/1.1
Host: www.mywebsite.com
```

* Server Response 

```
HTTP/1.1 200 OK
Date: Thu Aug 15 21:48:34 PDT 2019
Content-Length: 104
Connection: close

<html>
  <head>
    <title>Some stuff</title>
  </head>
  <body>
    <p>This is an example</p>
  </body>
</html>

```

Here is how you connect to a webserver as a client and send it HTML requests.
```
alx@conjecture:~$ telnet www.google.com 80
Trying 172.217.5.68...
Connected to www.google.com.
Escape character is '^]'.
GET /index.html HTTP/1.1

HTTP/1.1 200 OK
Date: Tue, 20 Aug 2019 03:45:34 GMT
Expires: -1
Cache-Control: private, max-age=0
Content-Type: text/html; charset=ISO-8859-1
P3P: CP="This is not a P3P policy! See g.co/p3phelp for more info."
Server: gws
...
```

### Headers
Headers provide metadata about a request or a response. This might include dates/times, server or application information, etc. The `Host` header, which declares the domain name of the server, is required on HTTP/1.1 requests. Header field names are case-sensitive. Non-standard headers were conventionally named with an `X-` pre-fix, a practice which is not followed anymore.

Listed below are popular headers and their purpose.

| Header | Example |Purpose |
|-----|-----|------|
|Accept|Accept: text/html| Declare what kind of data is acceptable in the response |
|Accept-Encoding|Accept-Encoding: gzip, deflate| Acceptable encodings by the client. This ensures the server only sends back data encoded in a format that client understands. |
|Authorization| Authorization: Basic \<base-64 string\> | Used to provide authentication information along with the request. In "Basic HTTP authentication", the username and password are provided in the format `user:password` encoded in base-64 format. |
|Connection|Connection: keep-alive| Connection control options |
|Forwarded |Forwarded: for=192.1.16.44;proto=https| Set by a proxy server to provide information about the original client. Because a proxy will initiate a new HTTP connection with the destination server, the server might lose context about the original client. The `Forwarded` header indicates to the server those details as well as lets the server know that this request is coming from a proxy |
|From|From: alx.james@gmail.com|E-mail of the user making the request|
|Host|Host: www.example.com|Information about the domain of the requestor|
|User-Agent|User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/12.0|Identifying information about the client. The purpose of the User-Agent header is to tell the server how to serve the page. For example, a page presented to a mobile device could be different from a page presented to a desktop.|
  
### Status Codes

Responses come back with a status code and/or additional data and headers. The status codes are divided into 5 groups based on the kind of response.

| Code | Type |
|-----|-----|
|1xx|Informational|
|2xx|Success|
|3xx|Redirect|
|4xx|Client Error|
|5xx|Server Error|

Popular status codes
| Code | Meaning |
|-----|-----|
|100 Continue|The server acknoledges the data received so far. Used in response to large requests.|
|200 OK |Request was successful|
|204|The request was successful and there is no data to return.|
|301 Moved Permanently|Redirecting URL to a new location. The `Location` header is used to tell the client where to redirect the request|
|304 Not Modified|The requested resource has not been modified since the time specified in `If-Modified-Since` or `If-None-Match`|
|400 Bad Request|Malformed/incorrect request|
|401 Unauthorized|Even though the term authorized is used, it indicates that the request is unauthenticated, as in, the server could not accertain the identity of the requestor|
|403 Forbidden|The requested action is forbidden by the server|
|404 Not Found|The most common error you get while browsing online, the url you're requesting points to a resource that does not exist|
|408 Request Timeout|Connection timed out|
|412 Precondition Failed|One or more required criteria by the client or server are unsatisfied|
|500 Internal Server Error|Generic message for something bad happened on the server|
|502 Bad Gateway|Sent by gateways/proxies when they receive an invalid response from the destination (upstream) server|


#### 301 Moved Permanently
Client request:
```
GET /index.php HTTP/1.1
Host: www.example.org
```
Server response:
```
HTTP/1.1 301 Moved Permanently
Location: http://www.example.org/index.asp
```


References:
https://www.w3.org/History/1989/proposal.html
wikipedia.org
